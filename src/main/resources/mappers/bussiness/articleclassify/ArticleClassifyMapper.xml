<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="cn.don9cn.blog.dao.bussiness.ArticleClassify.mapper">
	<!--<cache type="cn.don9.redis.core.LoggingRedisClusterCache" />-->
	<resultMap type="ArticleClassify" id="articleClassifyResult">
		<id column="CODE" property="code" />
		<result column="FLAG_DEL" jdbcType="VARCHAR" property="flagDel" />
		<result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
		<result column="MODIFY_TIME" jdbcType="VARCHAR" property="modifyTime" />
		<result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
		<result column="MODIFY_BY" jdbcType="VARCHAR" property="modifyBy" />
		<result column="Z_MORE01" jdbcType="VARCHAR" property="zMore01" />
		<result column="Z_MORE02" jdbcType="VARCHAR" property="zMore02" />
		<result column="Z_MORE03" jdbcType="VARCHAR" property="zMore03" />
		<result column="Z_MORE04" jdbcType="VARCHAR" property="zMore04" />
		<result column="Z_MORE05" jdbcType="VARCHAR" property="zMore05" />
		<result column="REMARK" jdbcType="VARCHAR" property="remark" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="PARENT" jdbcType="VARCHAR" property="parent" />
		<result column="LEVEL" jdbcType="VARCHAR" property="level" />
		<result column="LEAF" jdbcType="VARCHAR" property="leaf" />
	</resultMap>

	<!-- ******************************* 基础功能 ******************************** -->
	
	<!-- 添加 -->
	<insert id="base_insert" parameterType="ArticleClassify">
	   <selectKey keyProperty="code" resultType="String" order="BEFORE">
	      select replace(uuid(), '-', '')
	   </selectKey>
	   INSERT INTO ARTICLE_CLASSIFY
	   (CODE,FLAG_DEL,CREATE_TIME,MODIFY_TIME,CREATE_BY,MODIFY_BY,
	    Z_MORE01,Z_MORE02,Z_MORE03,Z_MORE04,Z_MORE05,REMARK,
		NAME,PARENT,LEVEL,LEAF)
	   VALUES 
	   (#{code,jdbcType=VARCHAR},#{flagDel,jdbcType=VARCHAR},#{createTime,jdbcType=VARCHAR},
		#{modifyTime,jdbcType=VARCHAR},#{createBy,jdbcType=VARCHAR},#{modifyBy,jdbcType=VARCHAR},
		#{zMore01,jdbcType=VARCHAR},#{zMore02,jdbcType=VARCHAR},#{zMore03,jdbcType=VARCHAR},
		#{zMore04,jdbcType=VARCHAR},#{zMore05,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},#{parent,jdbcType=VARCHAR},#{level,jdbcType=VARCHAR},#{leaf,jdbcType=VARCHAR})
	</insert>
	
	<!-- 更新 -->
	<update id="base_update" parameterType="ArticleClassify">
	     UPDATE ARTICLE_CLASSIFY
		<set>
			<if test="flagDel !=null and flagDel !=''">FLAG_DEL = #{flagDel,jdbcType=VARCHAR},</if>
			<if test="createTime !=null and createTime !=''">CREATE_TIME = #{createTime,jdbcType=VARCHAR},</if>
			<if test="modifyTime !=null and modifyTime !=''">MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR},</if>
			<if test="createBy !=null and createBy !=''">CREATE_BY = #{createBy,jdbcType=VARCHAR},</if>
			<if test="modifyBy !=null and modifyBy !=''">MODIFY_BY = #{modifyBy,jdbcType=VARCHAR},</if>
			<if test="zMore01 !=null and zMore01 !=''">Z_MORE01 = #{zMore01,jdbcType=VARCHAR},</if>
			<if test="zMore02 !=null and zMore02 !=''">Z_MORE02 = #{zMore02,jdbcType=VARCHAR},</if>
			<if test="zMore03 !=null and zMore03 !=''">Z_MORE03 = #{zMore03,jdbcType=VARCHAR},</if>
			<if test="zMore04 !=null and zMore04 !=''">Z_MORE04 = #{zMore04,jdbcType=VARCHAR},</if>
			<if test="zMore05 !=null and zMore05 !=''">Z_MORE05 = #{zMore05,jdbcType=VARCHAR},</if>
			<if test="remark !=null and remark !=''">REMARK = #{remark,jdbcType=VARCHAR},</if>
		    <if test="name !=null and name !=''">NAME = #{name,jdbcType=VARCHAR},</if>
			<if test="parent !=null and parent !=''">PARENT = #{parent,jdbcType=VARCHAR},</if>
			<if test="level !=null and level !=''">LEVEL = #{level,jdbcType=VARCHAR},</if>
			<if test="leaf !=null and leaf !=''">LEAF = #{leaf,jdbcType=VARCHAR},</if>
		</set>
		<where>
			<if test="code != null and code != ''">CODE = #{code,jdbcType=VARCHAR}</if>
		</where>
	</update>

	<!-- 删除 -->
    <update id="base_deleteById" parameterType="String">
       UPDATE ARTICLE_CLASSIFY SET FLAG_DEL = 1 WHERE CODE = #{value}
     </update>

	<!-- 批量删除 -->
    <update id="base_deleteBatch">
       UPDATE ARTICLE_CLASSIFY SET FLAG_DEL = 1 WHERE CODE IN
       <trim prefix="(" suffix=")" suffixOverrides=",">
          <foreach collection="list" item="code" separator=",">
	          #{code}
          </foreach>
       </trim>
     </update>

    <!-- 根据id查询当前实体 -->
	<select id="base_findById" parameterType="String" resultMap="articleClassifyResult">
	    SELECT * FROM ARTICLE_CLASSIFY WHERE FLAG_DEL != 1 AND CODE = #{code}
	</select>
	
	<!-- 查询所有 -->
	<select id="base_findAll"  resultMap="articleClassifyResult">
		SELECT * FROM ARTICLE_CLASSIFY WHERE FLAG_DEL != 1
	</select>
	
	<!-- 带参数的分页查询 -->
	<select id="base_findByPage" parameterType="ArticleClassify" resultMap="articleClassifyResult">
	    SELECT * FROM ARTICLE_CLASSIFY
	    <where>
	        FLAG_DEL != 1
            <if test="createTime !=null and createTime !=''">AND CREATE_TIME = #{createTime,jdbcType=VARCHAR}</if>
            <if test="modifyTime !=null and modifyTime !=''">AND MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR}</if>
            <if test="createBy !=null and createBy !=''">AND CREATE_BY = #{createBy,jdbcType=VARCHAR}</if>
            <if test="modifyBy !=null and modifyBy !=''">AND MODIFY_BY = #{modifyBy,jdbcType=VARCHAR}</if>
            <if test="zMore01 !=null and zMore01 !=''">AND Z_MORE01 = #{zMore01,jdbcType=VARCHAR}</if>
            <if test="zMore02 !=null and zMore02 !=''">AND Z_MORE02 = #{zMore02,jdbcType=VARCHAR}</if>
            <if test="zMore03 !=null and zMore03 !=''">AND Z_MORE03 = #{zMore03,jdbcType=VARCHAR}</if>
            <if test="zMore04 !=null and zMore04 !=''">AND Z_MORE04 = #{zMore04,jdbcType=VARCHAR}</if>
            <if test="zMore05 !=null and zMore05 !=''">AND Z_MORE05 = #{zMore05,jdbcType=VARCHAR}</if>
            <if test="remark !=null and remark !=''">AND REMARK = #{remark,jdbcType=VARCHAR}</if>
			<if test="name !=null and name !=''"> AND NAME = #{name,jdbcType=VARCHAR}</if>
			<if test="parent !=null and parent !=''"> AND PARENT = #{parent,jdbcType=VARCHAR}</if>
			<if test="level !=null and level !=''"> AND LEVEL = #{level,jdbcType=VARCHAR}</if>
			<if test="leaf !=null and leaf !=''"> AND LEAF = #{leaf,jdbcType=VARCHAR}</if>
	    </where>
		<if test="orderBy !=null and orderBy !=''">
			ORDER BY ${orderBy}
		</if>
	</select>

	<!-- 查询指定条件的实体集合 -->
    <select id="base_findListByParams" parameterType="ArticleClassify" resultMap="articleClassifyResult">
        SELECT * FROM ARTICLE_CLASSIFY
        <where>
            FLAG_DEL != 1
            <if test="createTime !=null and createTime !=''">AND CREATE_TIME = #{createTime,jdbcType=VARCHAR}</if>
            <if test="modifyTime !=null and modifyTime !=''">AND MODIFY_TIME = #{modifyTime,jdbcType=VARCHAR}</if>
            <if test="createBy !=null and createBy !=''">AND CREATE_BY = #{createBy,jdbcType=VARCHAR}</if>
            <if test="modifyBy !=null and modifyBy !=''">AND MODIFY_BY = #{modifyBy,jdbcType=VARCHAR}</if>
            <if test="zMore01 !=null and zMore01 !=''">AND Z_MORE01 = #{zMore01,jdbcType=VARCHAR}</if>
            <if test="zMore02 !=null and zMore02 !=''">AND Z_MORE02 = #{zMore02,jdbcType=VARCHAR}</if>
            <if test="zMore03 !=null and zMore03 !=''">AND Z_MORE03 = #{zMore03,jdbcType=VARCHAR}</if>
            <if test="zMore04 !=null and zMore04 !=''">AND Z_MORE04 = #{zMore04,jdbcType=VARCHAR}</if>
            <if test="zMore05 !=null and zMore05 !=''">AND Z_MORE05 = #{zMore05,jdbcType=VARCHAR}</if>
            <if test="remark !=null and remark !=''">AND REMARK = #{remark,jdbcType=VARCHAR}</if>
            <if test="name !=null and name !=''"> AND NAME = #{name,jdbcType=VARCHAR}</if>
			<if test="parent !=null and parent !=''"> AND PARENT = #{parent,jdbcType=VARCHAR}</if>
			<if test="level !=null and level !=''"> AND LEVEL = #{level,jdbcType=VARCHAR}</if>
			<if test="leaf !=null and leaf !=''"> AND LEAF = #{leaf,jdbcType=VARCHAR}</if>
        </where>
		<if test="orderBy !=null and orderBy !=''">
			ORDER BY ${orderBy}
		</if>
    </select>


	<!-- ******************************* 自定义功能 ******************************** -->

	<!-- 级联删除(为假删，规定:0为显示，1为删除) -->
	<update id="deleteCascade" parameterType="String">
		UPDATE ARTICLE_CLASSIFY SET FLAG_DEL = 1 WHERE FLAG_DEL != 1 AND ARTICLE_CLASSIFY.LEVEL LIKE CONCAT(#{value},'%')
	</update>

	<!-- 批量更新叶子状态 -->
	<update id="updateLeaf">
		UPDATE ARTICLE_CLASSIFY SET LEAF = 'Y' WHERE LEAF = 'N' AND CODE IN
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<foreach collection="list" item="code" separator=",">
				#{code}
			</foreach>
		</trim>
	</update>
 </mapper>
